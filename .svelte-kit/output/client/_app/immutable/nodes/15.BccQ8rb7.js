import"../chunks/Bzak7iHL.js";import"../chunks/CMQcD2UY.js";import{ak as d,al as x,as as s,aw as F,an as p,ap as C,ar as i,at as n,g as y,A as S,aq as D,s as v,am as K}from"../chunks/XzvCHHrQ.js";import{e as l}from"../chunks/DEvj3O7V.js";import{i as O}from"../chunks/DNlooKOq.js";import{s as E}from"../chunks/BoJ5Hi5g.js";import{a as R}from"../chunks/Dfc5OmDN.js";var U=d('<meta name="description" content="Interactive Solar System visualization with daily planet facts API built with SvelteKit"/>'),V=d('<div class="fullscreen-overlay svelte-1j4psh0" tabindex="0"><img alt="Fullscreen Screenshot" class="fullscreen-img svelte-1j4psh0"/> <button class="close-fullscreen svelte-1j4psh0" aria-label="Close fullscreen">&times;</button></div>'),z=d(`<main><h1 class="project-title svelte-1j4psh0">Solar System — SvelteKit Project</h1> <div id="container" class="svelte-1j4psh0"><p id="first-p" class="svelte-1j4psh0">An interactive Solar System page that visualizes the planets (Sun + 8) and shows daily rotating facts for any selected celestial body. 
      Facts are fetched from a custom Planet API via a local SvelteKit proxy to avoid CORS and maintain backend flexibility.</p> <div id="pilot-status" class="svelte-1j4psh0">Live Demo Available • API Documentation Included</div></div> <div id="core-features" class="svelte-1j4psh0"><h2 class="svelte-1j4psh0">Core Features</h2> <ul class="svelte-1j4psh0"><li class="svelte-1j4psh0">Interactive Solar System visualization with animated planets</li> <li class="svelte-1j4psh0">Daily rotating facts for Sun + 8 planets based on current date</li> <li class="svelte-1j4psh0">Clickable planet selection with smooth UI updates</li> <li class="svelte-1j4psh0">Server-side rendering for fast initial page loads</li> <li class="svelte-1j4psh0">Client-side dynamic fact fetching and display</li> <li class="svelte-1j4psh0">Responsive design for desktop and mobile devices</li></ul></div> <div id="architecture" class="svelte-1j4psh0"><h2 class="svelte-1j4psh0">Architecture</h2> <ul class="svelte-1j4psh0"><li class="svelte-1j4psh0"><b>Frontend:</b> SvelteKit + TypeScript + CSS Animations</li> <li class="svelte-1j4psh0"><b>Backend API:</b> SvelteKit API Routes (planet-api repository)</li> <li class="svelte-1j4psh0"><b>Integration:</b> Local SvelteKit proxy (/api/planet-fact) to avoid CORS</li> <li class="svelte-1j4psh0"><b>Deployment:</b> Frontend on Vercel, API on Vercel</li> <li class="svelte-1j4psh0"><b>Configuration:</b> Environment variables for API endpoint swapping</li></ul></div> <div id="how-it-works" class="svelte-1j4psh0"><h2 class="svelte-1j4psh0">How It Works</h2> <ul class="svelte-1j4psh0"><li class="svelte-1j4psh0"><b>1. Initial Load:</b> User visits /projects/solarsystem, server loads default Earth fact via proxy</li> <li class="svelte-1j4psh0"><b>2. Planet Selection:</b> User clicks planet or dropdown to select celestial body</li> <li class="svelte-1j4psh0"><b>3. Fact Fetch:</b> Client calls /api/planet-fact?planet=&lt;name&gt; proxy endpoint</li> <li class="svelte-1j4psh0"><b>4. API Forward:</b> Proxy forwards to PLANET_API_BASE environment variable</li> <li class="svelte-1j4psh0"><b>5. Daily Rotation:</b> API returns fact based on current day (EST timezone)</li> <li class="svelte-1j4psh0"><b>6. UI Update:</b> Fact card updates with new content and planet information</li></ul></div></main> <div id="screenshots" class="svelte-1j4psh0"><h2 class="screenshots-title svelte-1j4psh0">Screenshots</h2> <div class="screenshots-row svelte-1j4psh0"><img src="/solar-system-main.png" alt="Solar System Main View" class="screenshot-img svelte-1j4psh0" tabindex="0" role="button" aria-label="Open main view fullscreen"/> <img src="/solar-system-planets.png" alt="Solar System Planet Selection" class="screenshot-img svelte-1j4psh0" tabindex="0" role="button" aria-label="Open planet selection fullscreen"/></div> <div class="screenshots-row svelte-1j4psh0"><img src="/planet-api-docs.png" alt="Planet API Documentation" class="screenshot-img svelte-1j4psh0" tabindex="0" role="button" aria-label="Open API docs fullscreen"/> <img src="/solar-system-mobile.png" alt="Solar System Mobile View" class="screenshot-img svelte-1j4psh0" tabindex="0" role="button" aria-label="Open mobile view fullscreen"/></div></div> <!> <div id="cta-links" class="svelte-1j4psh0"><a href="https://solarsystem-app.vercel.app" class="cta-btn svelte-1j4psh0" target="_blank" rel="noopener noreferrer">Try the Solar System Demo</a> <a href="https://planet-api-mu.vercel.app" class="cta-btn svelte-1j4psh0" target="_blank" rel="noopener noreferrer">View Planet API</a> <a href="https://github.com/Stefanos-gif/solarsystem-app" class="cta-btn svelte-1j4psh0" target="_blank" rel="noopener noreferrer">Frontend Source</a> <a href="https://github.com/Stefanos-gif/planet-api" class="cta-btn svelte-1j4psh0" target="_blank" rel="noopener noreferrer">API Source</a></div>`,1);function W(w){let r=S(!1),h=S("");function a(e){v(h,e),v(r,!0),typeof document<"u"&&(document.body.style.overflow="hidden")}function m(){v(r,!1),typeof document<"u"&&(document.body.style.overflow="")}var b=z();x(e=>{var t=U();C.title="Solar System — SvelteKit Project | Stefanos Siathas",p(e,t)});var o=s(F(b),2),c=s(i(o),2),f=i(c),P=s(f,2);n(c);var u=s(c,2),j=i(u),I=s(j,2);n(u),n(o);var _=s(o,2);{var A=e=>{var t=V(),g=i(t),k=s(g,2);n(t),K(()=>E(g,"src",y(h))),l("click",k,R(m)),l("click",t,m),p(e,t)};O(_,e=>{y(r)&&e(A)})}D(2),l("click",f,()=>a("/solar-system-main.png")),l("click",P,()=>a("/solar-system-planets.png")),l("click",j,()=>a("/planet-api-docs.png")),l("click",I,()=>a("/solar-system-mobile.png")),p(w,b)}export{W as component};
