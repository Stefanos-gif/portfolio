import{s as be,f as o,a as g,e as de,A as Ce,g as c,d as a,c as _,u as T,h as K,j as t,k as pe,v as w,i,x as z,B as Y,P as je,S as we,y as Te}from"../chunks/scheduler.db26a3c5.js";import{S as Me,i as ke,b as me,d as ue,m as ve,a as he,t as fe,e as ge}from"../chunks/index.8c25f7e9.js";import{T as _e}from"../chunks/TripleImage.20fd03c4.js";function xe(x){let l,r,m,u,n,v="×",y,p;return{c(){l=o("div"),r=o("img"),u=g(),n=o("button"),n.textContent=v,this.h()},l(j){l=c(j,"DIV",{class:!0});var d=K(l);r=c(d,"IMG",{src:!0,alt:!0,class:!0}),u=_(d),n=c(d,"BUTTON",{class:!0,"aria-label":!0,"data-svelte-h":!0}),T(n)!=="svelte-uzi1y6"&&(n.textContent=v),d.forEach(a),this.h()},h(){je(r.src,m="/tic.png")||t(r,"src",m),t(r,"alt","tic"),t(r,"class","fullscreen-img svelte-9jxth4"),t(n,"class","close-btn svelte-9jxth4"),t(n,"aria-label","Close fullscreen"),t(l,"class","fullscreen-overlay svelte-9jxth4")},m(j,d){i(j,l,d),w(l,r),w(l,u),w(l,n),y||(p=[z(n,"click",x[3]),z(l,"click",we(x[3]))],y=!0)},p:Te,d(j){j&&a(l),y=!1,Y(p)}}}function ye(x){let l,r,m,u,n,v="×",y,p;return{c(){l=o("div"),r=o("img"),u=g(),n=o("button"),n.textContent=v,this.h()},l(j){l=c(j,"DIV",{class:!0});var d=K(l);r=c(d,"IMG",{src:!0,alt:!0,class:!0}),u=_(d),n=c(d,"BUTTON",{class:!0,"aria-label":!0,"data-svelte-h":!0}),T(n)!=="svelte-1oad50"&&(n.textContent=v),d.forEach(a),this.h()},h(){je(r.src,m="/scgame.png")||t(r,"src",m),t(r,"alt","scgame"),t(r,"class","fullscreen-img svelte-9jxth4"),t(n,"class","close-btn svelte-9jxth4"),t(n,"aria-label","Close fullscreen"),t(l,"class","fullscreen-overlay svelte-9jxth4")},m(j,d){i(j,l,d),w(l,r),w(l,u),w(l,n),y||(p=[z(n,"click",x[5]),z(l,"click",we(x[5]))],y=!0)},p:Te,d(j){j&&a(l),y=!1,Y(p)}}}function Le(x){let l,r,m,u,n,v,y,p,j='<h1 class="svelte-9jxth4">Welcome to my C++ Games</h1> <p id="first-p" class="svelte-9jxth4">This contains my C++ Games, which I’ll continue to expand as I improve.I love making simple little games so, feel free to explore the code on the links that i will share for each one.</p>',d,M,Z=`<p id="second-p" class="svelte-9jxth4">Tic Tac Toe</p> <p id="third-p" class="svelte-9jxth4">An interactive, text-based maze navigation program demonstrating structured data, user input handling, and simple collision detection:

Maze Representation
The maze is a 10×10 grid stored as a vector<vector<char>&gt;, where &#39;#&#39; denotes walls and &#39; &#39; open paths.

Player Struct
A Player struct holds x and y coordinates, initialized at (1,1).

Rendering Function
displayMaze() iterates over the grid, drawing either the maze cell or a &#39;P&#39; at the player’s current position.

Movement Logic
movePlayer(direction) computes tentative coordinates based on w/a/s/d input, checks for open space, and updates the player’s position if the target cell isn’t a wall.

Main Loop
Continuously renders the maze, prompts for direction, applies movement, and clears the console for real-time navigation.

This project highlights dynamic data structures, control flow, and basic game-loop architecture in C++. Find <a href="https://github.com/Stefanos-gif/tic-tac-toe-game/tree/main" target="_blank" rel="noopener noreferrer" style="color: #2eff23;">Here</a>!</vector<char></p>`,F,k,ee=`<p id="second-p" class="svelte-9jxth4">Simple Console Game</p> <p id="third-p" class="svelte-9jxth4">A compact, two-player Tic-Tac-Toe game implemented with clear, modular functions and robust input handling:

Board Representation
A 3×3 char array labeled ‘1’–‘9’ lets players pick moves by slot number. Each turn redraws the grid via drawBoard().

Core Logic

placeMarker(slot): Converts a slot to row/column indices, checks occupancy, and places the current marker.

winner(): Scans rows, columns, and diagonals for three identical markers, returning the winning player or 0.

swapPlayerAndMarker(): Toggles between Player 1 and Player 2 along with their markers (X/O).

Game Flow
In game(), Player 1 first selects X or O. The loop runs up to nine moves, prompting for valid slots, rejecting invalid or occupied entries, and ending early on a win. Finally, it declares the winner or a tie.

This project showcases procedural design, input validation, and user interaction in C++. Find <a href="https://github.com/Stefanos-gif/simple-console-game" target="_blank" rel="noopener noreferrer" style="color: #2eff23;">Here</a>!</p>`,G,b,D,B,A,L,te='<span class="number-one svelte-9jxth4">1</span> <div class="number-fire svelte-9jxth4"><span class="nflame nflame1 svelte-9jxth4"></span> <span class="nflame nflame2 svelte-9jxth4"></span> <span class="nflame nflame3 svelte-9jxth4"></span> <span class="nflame nflame4 svelte-9jxth4"></span> <span class="nflame nflame5 svelte-9jxth4"></span></div>',N,H,se='<span class="number-two svelte-9jxth4">2</span> <div class="number-fire svelte-9jxth4"><span class="nflame nflame1 svelte-9jxth4"></span> <span class="nflame nflame2 svelte-9jxth4"></span> <span class="nflame nflame3 svelte-9jxth4"></span> <span class="nflame nflame4 svelte-9jxth4"></span> <span class="nflame nflame5 svelte-9jxth4"></span></div>',O,I,ae='<div class="osc-arrow-body svelte-9jxth4"></div> <div class="osc-arrow-head svelte-9jxth4"></div>',q,E,le='<div class="osc-arrow-body svelte-9jxth4"></div> <div class="osc-arrow-head svelte-9jxth4"></div>',R,S,ne='<div class="osc-arrow-body osc-arrow-body-short svelte-9jxth4"></div> <div class="osc-arrow-head osc-arrow-head-short svelte-9jxth4"></div>',U,$,re='<div class="osc-arrow-body osc-arrow-body-short svelte-9jxth4"></div> <div class="osc-arrow-head osc-arrow-head-short svelte-9jxth4"></div>',X,C,V,W,P,J,Q,ie;D=new _e({props:{img_url1:"/tic.png",img_url2:"/tic.png",img_url3:"/tic.png",img_height:"51vh",aspect_ratio:"994/859"}});let h=x[0]&&xe(x);V=new _e({props:{img_url1:"/scgame.png",img_url2:"/scgame.png",img_url3:"/scgame.png",img_height:"51vh",aspect_ratio:"988/910"}});let f=x[1]&&ye(x);return{c(){l=o("meta"),r=o("meta"),m=o("meta"),u=o("meta"),n=o("meta"),v=o("meta"),y=g(),p=o("div"),p.innerHTML=j,d=g(),M=o("div"),M.innerHTML=Z,F=g(),k=o("div"),k.innerHTML=ee,G=g(),b=o("div"),me(D.$$.fragment),B=g(),h&&h.c(),A=g(),L=o("div"),L.innerHTML=te,N=g(),H=o("div"),H.innerHTML=se,O=g(),I=o("div"),I.innerHTML=ae,q=g(),E=o("div"),E.innerHTML=le,R=g(),S=o("div"),S.innerHTML=ne,U=g(),$=o("div"),$.innerHTML=re,X=g(),C=o("div"),me(V.$$.fragment),W=g(),f&&f.c(),P=de(),this.h()},l(e){const s=Ce("svelte-1kt1r09",document.head);l=c(s,"META",{property:!0,content:!0}),r=c(s,"META",{property:!0,content:!0}),m=c(s,"META",{property:!0,content:!0}),u=c(s,"META",{property:!0,content:!0}),n=c(s,"META",{property:!0,content:!0}),v=c(s,"META",{name:!0,content:!0}),s.forEach(a),y=_(e),p=c(e,"DIV",{id:!0,class:!0,"data-svelte-h":!0}),T(p)!=="svelte-l1j1mr"&&(p.innerHTML=j),d=_(e),M=c(e,"DIV",{id:!0,class:!0,"data-svelte-h":!0}),T(M)!=="svelte-11l5tav"&&(M.innerHTML=Z),F=_(e),k=c(e,"DIV",{id:!0,class:!0,"data-svelte-h":!0}),T(k)!=="svelte-pvfqi2"&&(k.innerHTML=ee),G=_(e),b=c(e,"DIV",{id:!0,style:!0,class:!0});var oe=K(b);ue(D.$$.fragment,oe),oe.forEach(a),B=_(e),h&&h.l(e),A=_(e),L=c(e,"DIV",{class:!0,"data-svelte-h":!0}),T(L)!=="svelte-h1aj3e"&&(L.innerHTML=te),N=_(e),H=c(e,"DIV",{class:!0,"data-svelte-h":!0}),T(H)!=="svelte-cectrb"&&(H.innerHTML=se),O=_(e),I=c(e,"DIV",{class:!0,"data-svelte-h":!0}),T(I)!=="svelte-1ilng5k"&&(I.innerHTML=ae),q=_(e),E=c(e,"DIV",{class:!0,"data-svelte-h":!0}),T(E)!=="svelte-wmbe8i"&&(E.innerHTML=le),R=_(e),S=c(e,"DIV",{class:!0,"data-svelte-h":!0}),T(S)!=="svelte-1tizs17"&&(S.innerHTML=ne),U=_(e),$=c(e,"DIV",{class:!0,"data-svelte-h":!0}),T($)!=="svelte-xgj3u0"&&($.innerHTML=re),X=_(e),C=c(e,"DIV",{id:!0,style:!0,class:!0});var ce=K(C);ue(V.$$.fragment,ce),ce.forEach(a),W=_(e),f&&f.l(e),P=de(),this.h()},h(){document.title="C++ Games | Stefanos Portfolio",t(l,"property","og:title"),t(l,"content","C++ Games | Stefanos Portfolio"),t(r,"property","og:description"),t(r,"content","Explore Stefanos' collection of C++ games, including a text-based maze and a two-player Tic-Tac-Toe. Each project demonstrates dynamic data structures, user input, and classic game logic in C++."),t(m,"property","og:type"),t(m,"content","website"),t(u,"property","og:url"),t(u,"content","https://stefanosgif.vercel.app/projects/cpp-games"),t(n,"property","og:image"),t(n,"content","https://stefanosgif.vercel.app/tic.png"),t(v,"name","description"),t(v,"content","Explore Stefanos' collection of C++ games, including a text-based maze and a two-player Tic-Tac-Toe. Each project demonstrates dynamic data structures, user input, and classic game logic in C++."),t(p,"id","container"),t(p,"class","svelte-9jxth4"),t(M,"id","container2"),t(M,"class","svelte-9jxth4"),t(k,"id","container3"),t(k,"class","svelte-9jxth4"),t(b,"id","img-hover"),pe(b,"cursor","pointer"),t(b,"class","svelte-9jxth4"),t(L,"class","number-one-fire-container svelte-9jxth4"),t(H,"class","number-two-fire-container svelte-9jxth4"),t(I,"class","osc-arrow-container svelte-9jxth4"),t(E,"class","osc-arrow-container osc-arrow-container-2 svelte-9jxth4"),t(S,"class","osc-arrow-container osc-arrow-container-short osc-arrow-container-3 svelte-9jxth4"),t($,"class","osc-arrow-container osc-arrow-container-short osc-arrow-container-4 svelte-9jxth4"),t(C,"id","img-hover2"),pe(C,"cursor","pointer"),t(C,"class","svelte-9jxth4")},m(e,s){w(document.head,l),w(document.head,r),w(document.head,m),w(document.head,u),w(document.head,n),w(document.head,v),i(e,y,s),i(e,p,s),i(e,d,s),i(e,M,s),i(e,F,s),i(e,k,s),i(e,G,s),i(e,b,s),ve(D,b,null),i(e,B,s),h&&h.m(e,s),i(e,A,s),i(e,L,s),i(e,N,s),i(e,H,s),i(e,O,s),i(e,I,s),i(e,q,s),i(e,E,s),i(e,R,s),i(e,S,s),i(e,U,s),i(e,$,s),i(e,X,s),i(e,C,s),ve(V,C,null),i(e,W,s),f&&f.m(e,s),i(e,P,s),J=!0,Q||(ie=[z(b,"click",x[2]),z(C,"click",x[4])],Q=!0)},p(e,[s]){e[0]?h?h.p(e,s):(h=xe(e),h.c(),h.m(A.parentNode,A)):h&&(h.d(1),h=null),e[1]?f?f.p(e,s):(f=ye(e),f.c(),f.m(P.parentNode,P)):f&&(f.d(1),f=null)},i(e){J||(he(D.$$.fragment,e),he(V.$$.fragment,e),J=!0)},o(e){fe(D.$$.fragment,e),fe(V.$$.fragment,e),J=!1},d(e){e&&(a(y),a(p),a(d),a(M),a(F),a(k),a(G),a(b),a(B),a(A),a(L),a(N),a(H),a(O),a(I),a(q),a(E),a(R),a(S),a(U),a($),a(X),a(C),a(W),a(P)),a(l),a(r),a(m),a(u),a(n),a(v),ge(D),h&&h.d(e),ge(V),f&&f.d(e),Q=!1,Y(ie)}}}function He(x,l,r){let m=!1;function u(){r(0,m=!0)}function n(){r(0,m=!1)}let v=!1;function y(){r(1,v=!0)}function p(){r(1,v=!1)}return[m,v,u,n,y,p]}class $e extends Me{constructor(l){super(),ke(this,l,He,Le,be,{})}}export{$e as component};
